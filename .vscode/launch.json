{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "type": "java",
            "name": "Launch DFS",
            "request": "launch",
            "mainClass": "ds.Graph.DFS",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch BFS",
            "request": "launch",
            "mainClass": "ds.Graph.BFS",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch ConvertToFullBinaryTree",
            "request": "launch",
            "mainClass": "ds.Tree.ConvertToFullBinaryTree",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch LeafSimilarTrees",
            "request": "launch",
            "mainClass": "ds.Tree.LeafSimilarTrees",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch RepresentationUsingAdjacencyList",
            "request": "launch",
            "mainClass": "ds.Graph.RepresentationUsingAdjacencyList",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch RepresentationUsingAdjacencyMatrix",
            "request": "launch",
            "mainClass": "ds.Graph.RepresentationUsingAdjacencyMatrix",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch NropesWithMinimumCosts",
            "request": "launch",
            "mainClass": "Heap.NropesWithMinimumCosts",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch KlargestElementInStreams",
            "request": "launch",
            "mainClass": "Heap.KlargestElementInStreams",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch PathSum",
            "request": "launch",
            "mainClass": "ds.Tree.PathSum",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch ImplementTwoStacksInArray",
            "request": "launch",
            "mainClass": "ds.stacks.ImplementTwoStacksInArray",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch HeapSort",
            "request": "launch",
            "mainClass": "Heap.HeapSort",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch TrimBinarySearchTree",
            "request": "launch",
            "mainClass": "ds.Tree.TrimBinarySearchTree",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch ReversingStack",
            "request": "launch",
            "mainClass": "ds.stacks.ReversingStack",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch CelebrityProblem",
            "request": "launch",
            "mainClass": "ds.stacks.CelebrityProblem",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch BuildHeap",
            "request": "launch",
            "mainClass": "Heap.BuildHeap",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch SumofAllLeftNodes",
            "request": "launch",
            "mainClass": "ds.Tree.SumofAllLeftNodes",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch InvertBinaryTree",
            "request": "launch",
            "mainClass": "ds.Tree.InvertBinaryTree",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch PrintRightViewOfBT",
            "request": "launch",
            "mainClass": "ds.Tree.PrintRightViewOfBT",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch SearchBST",
            "request": "launch",
            "mainClass": "ds.Tree.SearchBST",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch RangeSumOfBST",
            "request": "launch",
            "mainClass": "ds.Tree.RangeSumOfBST",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch RangeSumOfBT",
            "request": "launch",
            "mainClass": "ds.Tree.RangeSumOfBT",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch MergeTwoBinaryTrees",
            "request": "launch",
            "mainClass": "ds.Tree.MergeTwoBinaryTrees",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch BoundaryTraversal",
            "request": "launch",
            "mainClass": "ds.Tree.BoundaryTraversal",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch MorrisInorderTraversal",
            "request": "launch",
            "mainClass": "ds.Tree.MorrisInorderTraversal",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch VerticalTraversalOfBT",
            "request": "launch",
            "mainClass": "ds.Tree.VerticalTraversalOfBT",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch ConvertBTtoDLL",
            "request": "launch",
            "mainClass": "ds.Tree.ConvertBTtoDLL",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch DiameterOfBinaryTree",
            "request": "launch",
            "mainClass": "ds.Tree.DiameterOfBinaryTree",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch MaxSumFromRootToLraf",
            "request": "launch",
            "mainClass": "ds.Tree.MaxSumFromRootToLraf",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch ConstructSumTreeOfBT",
            "request": "launch",
            "mainClass": "ds.Tree.ConstructSumTreeOfBT",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch ConstructBTFromInorderAndPostOrderTraversals",
            "request": "launch",
            "mainClass": "ds.Tree.ConstructBTFromInorderAndPostOrderTraversals",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch ChildSumPropertyOfBinaryTree",
            "request": "launch",
            "mainClass": "ds.Tree.ChildSumPropertyOfBinaryTree",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch LCAOfBinaryTree",
            "request": "launch",
            "mainClass": "ds.Tree.LCAOfBinaryTree",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch LowestCommonAncestorOfBST",
            "request": "launch",
            "mainClass": "ds.Tree.LowestCommonAncestorOfBST",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch AncestorOfNodeInBinaryTre",
            "request": "launch",
            "mainClass": "ds.Tree.AncestorOfNodeInBinaryTre",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch MirrorOfBinaryTree",
            "request": "launch",
            "mainClass": "ds.Tree.MirrorOfBinaryTree",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch SpiralOrderOfBinaryTree",
            "request": "launch",
            "mainClass": "ds.Tree.SpiralOrderOfBinaryTree",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch LevelOrderTraversal",
            "request": "launch",
            "mainClass": "ds.Tree.LevelOrderTraversal",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch IdenticalBinaryTreesOrNot",
            "request": "launch",
            "mainClass": "ds.Tree.IdenticalBinaryTreesOrNot",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch FindPossibleCombinationsOfPhonedigits",
            "request": "launch",
            "mainClass": "ds.recursion.FindPossibleCombinationsOfPhonedigits",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch SudokoUsingBacktracking",
            "request": "launch",
            "mainClass": "ds.Tree.SudokoUsingBacktracking",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch MaximumDepthOfBinaryTree",
            "request": "launch",
            "mainClass": "ds.Tree.MaximumDepthOfBinaryTree",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch CountNodesInBinaryTree",
            "request": "launch",
            "mainClass": "ds.Tree.CountNodesInBinaryTree",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch DeleteNodeInBST",
            "request": "launch",
            "mainClass": "ds.Tree.DeleteNodeInBST",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch TraversalsOfBST",
            "request": "launch",
            "mainClass": "ds.Tree.TraversalsOfBST",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch OperationsInBST",
            "request": "launch",
            "mainClass": "ds.Tree.OperationsInBST",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch BuildBST",
            "request": "launch",
            "mainClass": "ds.Tree.BuildBST",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch StockSpanProblem",
            "request": "launch",
            "mainClass": "ds.stacks.StockSpanProblem",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch RemoveDuplicatesFeomSortedList",
            "request": "launch",
            "mainClass": "ds.linkedLists.RemoveDuplicatesFeomSortedList",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch RotateListKTimes",
            "request": "launch",
            "mainClass": "ds.linkedLists.RotateListKTimes",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch ImplementingQueueUsinglinkedList",
            "request": "launch",
            "mainClass": "ds.Queue.ImplementingQueueUsinglinkedList",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch ImplementingQueueUsingArray",
            "request": "launch",
            "mainClass": "ds.Queue.ImplementingQueueUsingArray",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch FindNextGreaterNode",
            "request": "launch",
            "mainClass": "ds.linkedLists.FindNextGreaterNode",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch EvaluationOfPrefix",
            "request": "launch",
            "mainClass": "ds.stacks.EvaluationOfPrefix",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch EvaluationOfPostfix",
            "request": "launch",
            "mainClass": "ds.stacks.EvaluationOfPostfix",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch ReverseLinkedlistFromMtoNNodes",
            "request": "launch",
            "mainClass": "ds.linkedLists.ReverseLinkedlistFromMtoNNodes",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch SwapNodesInPairs",
            "request": "launch",
            "mainClass": "ds.linkedLists.SwapNodesInPairs",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch InfixToPrefix",
            "request": "launch",
            "mainClass": "ds.stacks.InfixToPrefix",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch InfixToPostfix",
            "request": "launch",
            "mainClass": "ds.stacks.InfixToPostfix",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch ParanthesisCheck",
            "request": "launch",
            "mainClass": "ds.stacks.ParanthesisCheck",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch StackImplementationUsingLinkedList",
            "request": "launch",
            "mainClass": "ds.stacks.StackImplementationUsingLinkedList",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch StackImplementationUsingArrays",
            "request": "launch",
            "mainClass": "ds.stacks.StackImplementationUsingArrays",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch FindUnionAndIntersectionUsingHashing",
            "request": "launch",
            "mainClass": "ds.linkedLists.FindUnionAndIntersectionUsingHashing",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch FindUnionAndIntersection",
            "request": "launch",
            "mainClass": "ds.linkedLists.FindUnionAndIntersection",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch FindMedianOfTwoSortedArray",
            "request": "launch",
            "mainClass": "ds.array.FindMedianOfTwoSortedArray",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch MergeSort",
            "request": "launch",
            "mainClass": "ds.linkedLists.MergeSort",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch MergeSortedlinkedlistAndFlatten",
            "request": "launch",
            "mainClass": "ds.linkedLists.MergeSortedlinkedlistAndFlatten",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch AlternatingSplitsUsingPtrs",
            "request": "launch",
            "mainClass": "ds.linkedLists.AlternatingSplitsUsingPtrs",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch MergeSortedKLinkedList",
            "request": "launch",
            "mainClass": "ds.linkedLists.MergeSortedKLinkedList",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch MergeTwoSortedLinkedListUsinhRecursion",
            "request": "launch",
            "mainClass": "ds.linkedLists.MergeTwoSortedLinkedListUsinhRecursion",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch MergeTwoSortedLinkedlist",
            "request": "launch",
            "mainClass": "ds.linkedLists.MergeTwoSortedLinkedlist",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch FindFirstMissingPositiveInteger",
            "request": "launch",
            "mainClass": "ds.array.FindFirstMissingPositiveInteger",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch FindDuplicateNumber",
            "request": "launch",
            "mainClass": "ds.array.FindDuplicateNumber",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch ReverseAlternativeKNodes",
            "request": "launch",
            "mainClass": "ds.linkedLists.ReverseAlternativeKNodes",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch GameOfLife",
            "request": "launch",
            "mainClass": "ds.array.GameOfLife",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch SplitCircularList",
            "request": "launch",
            "mainClass": "ds.linkedLists.SplitCircularList",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch FindFactorial",
            "request": "launch",
            "mainClass": "ds.linkedLists.FindFactorial",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch AddTwoNumbers",
            "request": "launch",
            "mainClass": "ds.linkedLists.AddTwoNumbers",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch CloneListWithRandomPointer",
            "request": "launch",
            "mainClass": "ds.linkedLists.CloneListWithRandomPointer",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch sample",
            "request": "launch",
            "mainClass": "ds.linkedLists.sample",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch SplitKConsecutiveLinkedList",
            "request": "launch",
            "mainClass": "ds.linkedLists.SplitKConsecutiveLinkedList",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch AlternatingSplitsUsingRecursion",
            "request": "launch",
            "mainClass": "ds.linkedLists.AlternatingSplitsUsingRecursion",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch main",
            "request": "launch",
            "mainClass": "ds.linkedLists.main",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch AlternatingSplitInSll",
            "request": "launch",
            "mainClass": "ds.linkedLists.AlternatingSplitInSll",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch FindIntersectionUsingHashing",
            "request": "launch",
            "mainClass": "ds.linkedLists.FindIntersectionUsingHashing",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch IntersectionOfSll",
            "request": "launch",
            "mainClass": "ds.linkedLists.IntersectionOfSll",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch Current File",
            "request": "launch",
            "mainClass": "${file}"
        },
        {
            "type": "java",
            "name": "Launch CountingSort",
            "request": "launch",
            "mainClass": "ds.CountingSort",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch InsertionSort",
            "request": "launch",
            "mainClass": "ds.InsertionSort",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch MergeSort",
            "request": "launch",
            "mainClass": "ds.MergeSort",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch QuickSort",
            "request": "launch",
            "mainClass": "ds.QuickSort",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch RadixSort",
            "request": "launch",
            "mainClass": "ds.RadixSort",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch SelectionSort",
            "request": "launch",
            "mainClass": "ds.SelectionSort",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch ArrayProductProblem",
            "request": "launch",
            "mainClass": "ds.array.ArrayProductProblem",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch DutchNationalFlagProblem",
            "request": "launch",
            "mainClass": "ds.array.DutchNationalFlagProblem",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch FIndTwoMissingNumber",
            "request": "launch",
            "mainClass": "ds.array.FIndTwoMissingNumber",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch FindLeadersInArray",
            "request": "launch",
            "mainClass": "ds.array.FindLeadersInArray",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch FindMajorityElement",
            "request": "launch",
            "mainClass": "ds.array.FindMajorityElement",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch FindMissingNumber",
            "request": "launch",
            "mainClass": "ds.array.FindMissingNumber",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch FindTwoRepeatingElementsInArray",
            "request": "launch",
            "mainClass": "ds.array.FindTwoRepeatingElementsInArray",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch InversionOfarrays",
            "request": "launch",
            "mainClass": "ds.array.InversionOfarrays",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch MergeOverlappingInterval",
            "request": "launch",
            "mainClass": "ds.array.MergeOverlappingInterval",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch PartitionEqualSubsetSum",
            "request": "launch",
            "mainClass": "ds.array.PartitionEqualSubsetSum",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch ReplaceElements",
            "request": "launch",
            "mainClass": "ds.array.ReplaceElements",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch RotateArray",
            "request": "launch",
            "mainClass": "ds.array.RotateArray",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch RotateArrayTo90Degree",
            "request": "launch",
            "mainClass": "ds.array.RotateArrayTo90Degree",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch SingleNumber",
            "request": "launch",
            "mainClass": "ds.array.SingleNumber",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch SmallerThanCurrentNumber",
            "request": "launch",
            "mainClass": "ds.array.SmallerThanCurrentNumber",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch SortArrayByParity",
            "request": "launch",
            "mainClass": "ds.array.SortArrayByParity",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch SortedRotatedArray",
            "request": "launch",
            "mainClass": "ds.array.SortedRotatedArray",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch SortedTripletsInArray",
            "request": "launch",
            "mainClass": "ds.array.SortedTripletsInArray",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch ThreeSum",
            "request": "launch",
            "mainClass": "ds.array.ThreeSum",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch CircularDll",
            "request": "launch",
            "mainClass": "ds.linkedLists.CircularDll",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch CircularSll",
            "request": "launch",
            "mainClass": "ds.linkedLists.CircularSll",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch DetectLoopInLikedlistUsinhHashing",
            "request": "launch",
            "mainClass": "ds.linkedLists.DetectLoopInLikedlistUsinhHashing",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch DetectLoopInLinkedlist",
            "request": "launch",
            "mainClass": "ds.linkedLists.DetectLoopInLinkedlist",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch Dll",
            "request": "launch",
            "mainClass": "ds.linkedLists.Dll",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch KthNodeFromEndInSLL",
            "request": "launch",
            "mainClass": "ds.linkedLists.KthNodeFromEndInSLL",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch PalindromeOrNot",
            "request": "launch",
            "mainClass": "ds.linkedLists.PalindromeOrNot",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch PalindromeUsingRecursion",
            "request": "launch",
            "mainClass": "ds.linkedLists.PalindromeUsingRecursion",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch RemoveNthNodeFromEndOfLinkedlist",
            "request": "launch",
            "mainClass": "ds.linkedLists.RemoveNthNodeFromEndOfLinkedlist",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch Sll",
            "request": "launch",
            "mainClass": "ds.linkedLists.Sll",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch SwapKthAndKminus1thNodeInLikedlist",
            "request": "launch",
            "mainClass": "ds.linkedLists.SwapKthAndKminus1thNodeInLikedlist",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch isPowerOfTwo",
            "request": "launch",
            "mainClass": "ds.recursion.isPowerOfTwo",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch findKSmallestElement",
            "request": "launch",
            "mainClass": "ds.sorting.findKSmallestElement",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch smallerNumbersThanCurrent",
            "request": "launch",
            "mainClass": "ds.sorting.smallerNumbersThanCurrent",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch sortArrayOf0s1s2s",
            "request": "launch",
            "mainClass": "ds.sorting.sortArrayOf0s1s2s",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch sortSentence",
            "request": "launch",
            "mainClass": "ds.sorting.sortSentence",
            "projectName": "datastructure-and-algorithms"
        },
        {
            "type": "java",
            "name": "Launch wiggleSort",
            "request": "launch",
            "mainClass": "ds.sorting.wiggleSort",
            "projectName": "datastructure-and-algorithms"
        }
    ]
}